<?xml version="1.0" encoding="UTF-8"?>
<ivy-module version="2.0" xmlns:m="http://ant.apache.org/ivy/maven">
	<info organisation="org.webjars"
		module="ace"
		revision="1.1.7-1"
		status="release"
		publication="20141027180121"
	>
		<license name="The Apache Software License, Version 2.0" url="http://www.apache.org/licenses/LICENSE-2.0.txt" />
		<license name="MIT License" url="http://www.opensource.org/licenses/mit-license.php" />
		<description homepage="http://webjars.org">
		WebJar for the ace editor
		</description>
		<m:properties__project.build.sourceEncoding>UTF-8</m:properties__project.build.sourceEncoding>
		<m:properties__destDir>${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${project.version}</m:properties__destDir>
		<m:properties__upstream.url>https://github.com/ajaxorg/ace-builds/archive</m:properties__upstream.url>
		<m:properties__sonatypeOssDistMgmtSnapshotsUrl>https://oss.sonatype.org/content/repositories/snapshots/</m:properties__sonatypeOssDistMgmtSnapshotsUrl>
		<m:properties__requirejs>
        {
            &quot;paths&quot;: {
                &quot;ace&quot;: &quot;src/ace&quot;
            }
        }
    </m:properties__requirejs>
		<m:properties__upstream.version>1.1.7</m:properties__upstream.version>
		<m:maven.plugins>org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.apache.maven.plugins__maven-enforcer-plugin__1.0|org.codehaus.mojo__wagon-maven-plugin__1.0-beta-4|null__maven-antrun-plugin__1.7|org.apache.maven.plugins__maven-release-plugin__2.5|org.sonatype.plugins__nexus-staging-maven-plugin__1.5.1</m:maven.plugins>
	</info>
	<configurations>
		<conf name="default" visibility="public" description="runtime dependencies and master artifact can be used with this conf" extends="runtime,master"/>
		<conf name="master" visibility="public" description="contains only the artifact published by this module itself, with no transitive dependencies"/>
		<conf name="compile" visibility="public" description="this is the default scope, used if none is specified. Compile dependencies are available in all classpaths."/>
		<conf name="provided" visibility="public" description="this is much like compile, but indicates you expect the JDK or a container to provide it. It is only available on the compilation classpath, and is not transitive."/>
		<conf name="runtime" visibility="public" description="this scope indicates that the dependency is not required for compilation, but is for execution. It is in the runtime and test classpaths, but not the compile classpath." extends="compile"/>
		<conf name="test" visibility="private" description="this scope indicates that the dependency is not required for normal use of the application, and is only available for the test compilation and execution phases." extends="runtime"/>
		<conf name="system" visibility="public" description="this scope is similar to provided except that you have to provide the JAR which contains it explicitly. The artifact is always available and is not looked up in a repository."/>
		<conf name="sources" visibility="public" description="this configuration contains the source artifact of this module, if any."/>
		<conf name="javadoc" visibility="public" description="this configuration contains the javadoc artifact of this module, if any."/>
		<conf name="optional" visibility="public" description="contains all optional dependencies"/>
	</configurations>
	<publications>
		<artifact name="ace" type="jar" ext="jar" conf="master"/>
	</publications>
</ivy-module>
